#!/usr/bin/python
import os
import re
import sys

import semi_rdf

DOAP = "http://usefulinc.com/ns/doap#"
FOAF = "http://xmlns.com/foaf/0.1/"
GNOME = "http://api.gnome.org/doap-extensions#"

projectnode = semi_rdf.Node((DOAP, "Project"), )

nodes = [projectnode]

data = sys.stdin.read()

nr, name, email, uid = 0, None, None, None
for l in data.splitlines():
    if l.startswith('#'): continue

    nr += 1

    if l == "":
        if name is not None and uid is not None:
            maintainernode = semi_rdf.Node((FOAF, "Person"))
            maintainernode.add_property((FOAF, "name"), None, name)
            maintainernode.add_property((GNOME, "userid"), None, uid)
            if email is not None:
                # Some people have obscurified their emails by replacing
                # @ and . with ' '. Changing ' ' to . won't unobscurify
                # but makes the mailto: URL valid.
                email = re.sub('\s+', '.', email)

                maintainernode.add_property((FOAF, "mbox"),
                                            None,
                                            "mailto:" + semi_rdf.UrlResource(email))
            projectnode.add_property((DOAP, "maintainer"), None, maintainernode)
            nodes.append(maintainernode)

        nr, name, email, uid = 0, None, None, None
        continue

    if nr == 1:
        name = l
    elif ":" in l:
        field, value = l.split(":", 1)
        field = field.strip()
        value = value.strip().lower()
        if field == 'E-mail' or field == 'E-Mail' or field == 'Email' or field == 'EMail':
            email = value
        elif field == 'Userid':
            uid = value

semi_rdf.dump_rdf(nodes, sys.stdout)
