#!/bin/bash
#
# Usage:
#  list-abusers [APACHE_LOG_FILE] [MINIMUM HITS / IP ADDRESS]
#
# Specify an IP address to grep for that IP address
#
# Example commands:
#  list-abusers               # Show top 25 IP address
#  list-abusers 127.0.0.1     # Grep logfile for IP address 127.0.0.1
#  list-abusers 500           # Show top 25 IP addresses with more than 500 hits
#  list-abusers .1 500        # Show top 25 IP addresses with more than 500 hits from the file access_log.1 (or similar)
#  list-abusers .1 127.0.0.1  # Grep access_log.1 (or similar) for IP address 127.0.0.1
#
# 
#

FILE=""

determine_file () {
	FILE=""

	# Change stuff like bugzilla-web to bugzilla
	HN=${HOSTNAME%-*}

	if [ -z "$1" ]; then
		# No arguments specified on the command line
		FILES="\
access_log
/var/log/httpd/$HN/access_log
/var/log/httpd/$HN.gnome.org/access_log
/var/log/httpd/access_log"
	else
		# In case an argument was given
		FILES="\
$1
$1
$1.gz
access_log$1
access_log$1.gz
/var/log/httpd/$HN/$1
/var/log/httpd/$HN/$1.gz
/var/log/httpd/$HN/access_log$1
/var/log/httpd/$HN/access_log$1.gz
/var/log/httpd/$HN.gnome.org/$1
/var/log/httpd/$HN.gnome.org/$1.gz
/var/log/httpd/$HN.gnome.org/access_log$1
/var/log/httpd/$HN.gnome.org/access_log$1.gz
/var/log/httpd/$1/access_log
/var/log/httpd/$1.gnome.org/access_log
/var/log/httpd/$1"
	fi

	while read filetest; do
		if [ -e "$filetest" ]; then
			FILE="$filetest"
			return 0
		fi
	done <<<"$FILES"

	# Could not determine the file
	return 1
}

mode_report () {
	# Report top 25 IP addresses by hits and optionally block them

	# Variables used in awk script:
	#   IP: hits per IP address
	#   STOP: time of last hit (assumes logfile is sorted on time)
	#   STOP: time of first hit (assumes logfile is sorted on time)
	#   MINHITS: minimum number of hits that will be reported
	#   IPS: total number of IPs found
	#
	# awk script will automatically set MINHITS when needed (makes the sort command quicker)
	SCRIPT='
{
	IP[$1]++;
	STOP[$1]=$4 "/" $5;
	if ( START[$1] == "" ) {
		START[$1]=$4 "/" $5;
		IPS++
	}
}

END {
	if ( MINHITS == "" && NR > 100000 ) {
		MINHITS=( (NR / IPS) + sqrt( ( NR / IPS ) ) )
	}
	for (i in IP) {
		if ( MINHITS == "" || IP[i] >= MINHITS ) {
			print i "\t" IP[i] "\t-\t" START[i] "\t" STOP[i];
		}
	}
}'

	# Show top 25 IP addresses for the determined logfile
	echo $FILE
	$CAT $FILE | gawk -v MINHITS="$MINHITS" "$SCRIPT" | sort -rnk 2 | head -n25 | while read ipaddr hits perhour start stop bar; do
		start=${start//\// }
		start=${start/:/ }
		start=${start//[]\[]/}
		startstamp=`date -d "$start" +%s`

		stop=${stop//\// }
		stop=${stop/:/ }
		stop=${stop//[]\[]/}
		stopstamp=`date -d "$stop" +%s`

		perhour=$[ ($hits * 60 * 60 ) / ($stopstamp-$startstamp ) ]
		baninfo=""

		if [ -n "$BAN" ]; then
			ADD_TO_HTACCESS=""
			if [ $hits -gt $MINHITS -a $perhour -gt $MINHITSPERHOUR ]; then
				baninfo="\tShould be banned"
				if [ -e "$HTACCESS" ]; then
					baninfo="\tBanned before"
					# XXX - IP address is used as-is in the regexp
					# XXX - should escape characters like . ? [
					grep -q -- "deny from $ipaddr" "$HTACCESS" || ADD_TO_HTACCESS=1
				fi
			fi
			if [ -n "$ADD_TO_HTACCESS" ]; then
				baninfo="\tBanned"
				# XXX - add mail notification
				cat >> "$HTACCESS" <<_EOF_

# Automatically banned by list-abusers on `date -R`
# Hits $hits, hits per hour $perhour
deny from $ipaddr
_EOF_
			fi
		fi

		echo -e "$ipaddr\t$hits\t$perhour\t$start\t$stop$baninfo"
	done
}

mode_grep () {
	# Grep logfile for an IP address / regexp
	$GREP "^$IP" "$FILE" | less
}

mode_tail () {
	# Show changes to the logfile as they happen

	if [ "$CAT" = "cat" ]; then
		tail -f "$FILE"
	else
		# Logfile is archived. Just show the end
		$CAT "$FILE" | tail
	fi
}


# --- MAIN PROGRAM STARTS HERE ---


determine_file "$@" && shift
if [ -z "$FILE" ]; then
	determine_file "access_log"
fi

# MODE determines what the script will do:
#  report: report/block the top 25 IP addresses
#  ban: same as report
MODE="report"
if [ -z "$1" ]; then
	:
elif [[ "$1" =~ ^[0-9]+$ ]]; then
	# numeric argument
	MINHITS=$1
elif [ "$1" = "-b" ]; then
	# Ban IP address, requires MINHITS and HITPERHOUR argument
	MODE="ban"
	BAN=1
	MINHITS=$2
	MINHITSPERHOUR=$3
	HTACCESS=$4
elif [ "$1" = "-f" ]; then
	MODE="tail"
else
	MODE="grep"
	IP="$1"
fi

case "${FILE##*.}" in
	gz)
		CAT="zcat"
		GREP="zgrep"
	;;
	bz2)
		CAT="bzcat"
		GREP="bzgrep"
	;;
	*)
		CAT="cat"
		GREP="grep"
	;;
esac

case "$MODE" in
	report|ban)  mode_report "$@";;
	grep)        mode_grep "$@";;
	tail)        mode_tail "$@";;
esac
