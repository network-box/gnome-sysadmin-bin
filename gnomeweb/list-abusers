#!/bin/bash
#
# Usage:
#  list-abusers [APACHE_LOG_FILE] [MINIMUM HITS / IP ADDRESS]
#
# Specify an IP address to grep for that IP address
#
# Example commands:
#  list-abusers               # Show top 25 IP address
#  list-abusers 127.0.0.1     # Grep logfile for IP address 127.0.0.1
#  list-abusers 500           # Show top 25 IP addresses with more than 500 hits
#  list-abusers .1 500        # Show top 25 IP addresses with more than 500 hits from the file access_log.1 (or similar)
#  list-abusers .1 127.0.0.1  # Grep access_log.1 (or similar) for IP address 127.0.0.1
#
# 
#

FILE=""

determine_file () {
	FILE=""

	if [ -z "$1" ]; then
		# No arguments specified on the command line
		FILES="\
access_log
/var/log/httpd/$HOSTNAME/access_log
/var/log/httpd/access_log"
	else
		# In case an argument was given
		FILES="\
$1
$1
$1.gz
access_log$1
access_log$1.gz
/var/log/httpd/$HOSTNAME/$1
/var/log/httpd/$HOSTNAME/$1.gz
/var/log/httpd/$HOSTNAME/access_log$1
/var/log/httpd/$HOSTNAME/access_log$1.gz
/var/log/httpd/$1/access_log
/var/log/httpd/$1.gnome.org/access_log
/var/log/httpd/$1"
	fi

	while read filetest; do
		if [ -e "$filetest" ]; then
			FILE="$filetest"
			return 0
		fi
	done <<<"$FILES"

	# Could not determine the file
	return 1
}

determine_file "$@" && shift
if [ -z "$FILE" ]; then
	determine_file "access_log"
fi

if [ -z "$1" ]; then
	:
elif [[ "$1" =~ ^[0-9]+$ ]]; then
	# numeric argument
	MINHITS=$1
else
	IP="$1"
fi

case "${FILE##*.}" in
	gz)
		CAT="zcat"
		GREP="zgrep"
	;;
	bz2)
		CAT="bzcat"
		GREP="bzgrep"
	;;
	*)
		CAT="cat"
		GREP="grep"
	;;
esac

# Variables used in awk script:
#   IP: hits per IP address
#   STOP: time of last hit (assumes logfile is sorted on time)
#   STOP: time of first hit (assumes logfile is sorted on time)
#   MINHITS: minimum number of hits that will be reported
#   IPS: total number of IPs found
#
# awk script will automatically set MINHITS when needed (makes the sort command quicker)
SCRIPT='
{
	IP[$1]++;
	STOP[$1]=$4 "/" $5;
	if ( START[$1] == "" ) {
		START[$1]=$4 "/" $5;
		IPS++
	}
}

END {
	if ( MINHITS == "" && NR > 100000 ) {
		MINHITS=( (NR / IPS) + sqrt( ( NR / IPS ) ) )
	}
	for (i in IP) {
		if ( MINHITS == "" || IP[i] >= MINHITS ) {
			print i "\t" IP[i] "\t-\t" START[i] "\t" STOP[i];
		}
	}
}
'
if [ -z "$IP" ]; then
	# Show top 25 IP addresses for the determined logfile
	echo $FILE
	$CAT $FILE | gawk -v MINHITS="$MINHITS" "$SCRIPT" | sort -rnk 2 | head -n25 | while read ipaddr hits perhour start stop bar; do
		start=${start//\// }
		start=${start/:/ }
		start=${start//[]\[]/}
		startstamp=`date -d "$start" +%s`

		stop=${stop//\// }
		stop=${stop/:/ }
		stop=${stop//[]\[]/}
		stopstamp=`date -d "$stop" +%s`

		perhour=$[ ($hits * 60 * 60 ) / ($stopstamp-$startstamp ) ]

		echo -e "$ipaddr\t$hits\t$perhour\t$start\t$stop"
	done
else
	# Grep logfile for a specific IP address
	$GREP "^$IP" $FILE | less
fi
