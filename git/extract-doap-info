#!/usr/bin/python

from cStringIO import StringIO
import os
import sys

script_path = os.path.realpath(os.path.abspath(sys.argv[0]))
script_dir = os.path.dirname(script_path)
sys.path.insert(0, script_dir)

if len(sys.argv) < 2:
    sys.exit(1)
git_dir = sys.argv[1]

import semi_rdf

DOAP = "http://usefulinc.com/ns/doap#"
GNOME = "http://api.gnome.org/doap-extensions#"

groups = {
    (GNOME + 'admin'): 'admin',
    (GNOME + 'bindings'): 'bindings',
    (GNOME + 'deprecated'): 'deprecated',
    (GNOME + 'desktop'): 'desktop',
    (GNOME + 'development'): 'development',
    (GNOME + 'infrastructure'): 'infrastructure',
    (GNOME + 'platform'): 'platform',
    (GNOME + 'productivity'): 'productivity'
    }

rdf = sys.stdin.read()

# We save the entire DOAP file into GIT_DIR for later use
fd = open(os.path.join(git_dir, "gnome_doap"), 'w')
fd.write(rdf)
fd.close()

# And then pre-parse out a couple of particular properties
nodes = semi_rdf.read_rdf(StringIO(rdf))
for node in nodes:
    if node.name != (DOAP, "Project"):
        continue

    shortdesc = node.find_property((DOAP, "shortdesc"))
    fd = open(os.path.join(git_dir, 'description'), 'w')
    print >> fd, shortdesc
    fd.close()

    group = node.find_property((DOAP, "category"))
    group = groups.get(group, 'other')
    fd = open(os.path.join(git_dir, 'gnome_group'), 'w')
    print >> fd, group
    fd.close()
