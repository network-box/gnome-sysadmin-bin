#!/bin/bash

# In a post-receive hook, find out what commits are new (not in the
# repository before) and notify the CIA system (IRC bots, etc) about it.

BINDIR=$(cd $(dirname $0) && pwd)

# Adapted from:
#  http://kitenet.net/~joey/blog/entry/lazyweb:_git_cia_hooks/
while read oldrev newrev refname; do
    # Only pay attention to branch updates
    if ! expr "$refname" : "refs/heads/" > /dev/null 2>& 1; then
	continue
    fi

    # If the new revision is the null revision, it's a branch delete
    if expr "$newrev" : '0\+$' > /dev/null 2>&1 ; then
	continue
    fi

    # If the old revision is the null revision, it's a branch creation
    if expr "$oldrev" : '0\+$' > /dev/null 2>&1 ; then
	range="$newrev"
    else
	range="$oldrev..$newrev"
    fi

    branchname=${refname#refs/heads/}
    [ "$branchname" = "master" ] && branchname=

    # Take all the branches in the repo, as "^/ref/heads/branchname", other than the
    # branch we are actualy committing to, and exclude commits already on those
    # branches from the list of commits between $oldrev and $newrev.
    #
    # Note that if a commit is pushed to two branches at once, it won't get notified
    # on either. That's bad, but probably better than repeating notifications
    # on a merge of public branches.

    for merged in $(git rev-parse --symbolic-full-name --not --branches | \
                    egrep -v "^\^$refname$" | \
		    git rev-list --reverse --stdin "$range"); do
        $BINDIR/ciabot.pl $merged $branchname 1>&2
    done
done
