#!/usr/bin/python

import sys, os, getopt, shutil, string, re, subprocess, glob
import os.path

os.nice(19)

if __name__ == '__main__':
    orig, backup, tmp = sys.argv[1:]
    
    for origsvn in glob.glob('%s/*' % orig):
        if not os.path.isdir(os.path.join(origsvn, 'hooks')):
            continue

        latestrev = subprocess.Popen(["svnlook", "youngest", origsvn], stdout=subprocess.PIPE).communicate()[0].strip()
        svnname = os.path.basename(origsvn)

        tmpsvn = os.path.join(tmp, svnname)
        backupsvn = os.path.join(backup, svnname)
        if os.path.isdir(tmpsvn) or os.path.isdir(backupsvn):
            print 'ERROR: Path already exists: %s' % svnname
            continue

        # Setup new repository
        subprocess.check_call(['svnadmin', 'create', tmpsvn])
        subprocess.check_call(['find', '%s/hooks' % origsvn, '-type', 'f', '(', '-name', '*.tmpl', '-prune', '-o', '-exec', 'cp', '-p', '{}', '%s/hooks' % tmpsvn, ')'])
        subprocess.check_call(['chown', '-R', '--reference', origsvn, '--', tmpsvn])
        subprocess.check_call(['chmod', '-R', '--reference', origsvn, '--', tmpsvn])
        subprocess.check_call(['find', tmpsvn, '-type', 'f', '-exec', 'chmod', '-x', '{}', ';'])
        subprocess.check_call(['find', '%s/hooks' % tmpsvn, '-type', 'f', '(', '-name', '*.tmpl', '-prune', '-o', '-exec', 'chmod', '+x', '{}', ';', ')'])

        # Dump old repository into new one
        p_dump = subprocess.Popen(['svnadmin', 'dump', '-q', '--incremental', '--deltas', origsvn], stdout=subprocess.PIPE)
        p_load = subprocess.Popen(['svnadmin', 'load', '-q', '--force-uuid', tmpsvn], stdin=p_dump.stdout)
        p_dump.wait()
        p_load.wait()
        
        latestrev2 = subprocess.Popen(["svnlook", "youngest", origsvn], stdout=subprocess.PIPE).communicate()[0].strip()
        
        print svnname, latestrev, latestrev2

